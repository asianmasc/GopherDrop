services:
  db:
    image: postgres:17-alpine
    container_name: gopherdrop_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: gopherdropdb
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d gopherdropdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gopherdrop

  app:
    image: ghcr.io/kek-sec/gopherdrop:backend-latest
    container_name: gopherdrop_app
    environment:
      DB_HOST: db
      DB_USER: user
      DB_PASSWORD: pass
      DB_NAME: gopherdropdb
      DB_SSLMODE: disable
      SECRET_KEY: supersecretkeysupersecretkey32
      LISTEN_ADDR: :8080
      STORAGE_PATH: /app/storage
      MAX_FILE_SIZE: 10485760
    volumes:
      - app_storage:/app/storage
    depends_on:
      db:
        condition: service_healthy
    networks:
      - gopherdrop
    ports:
      - "8080:8080"

  ui:
    image: ghcr.io/kek-sec/gopherdrop:ui-latest
    container_name: gopherdrop_ui
    depends_on:
      - app
    ports:
      - "8081:80"
    networks:
      - gopherdrop

volumes:
  db_data:
    driver: local
  app_storage:
    driver: local

networks:
  gopherdrop:
    driver: bridge